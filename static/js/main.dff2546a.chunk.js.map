{"version":3,"sources":["Page/Page.module.css","Default/Default.module.css","Results/Results.module.css","Landing/Landing.js","Results/Results.js","Page/Page.js","Default/Default.js","App.js","serviceWorker.js","index.js","Landing/Landing.module.css"],"names":["module","exports","container","title","link","button","hour","amount","text","disable","main","articles","private","input","main2","left","ldsdefault","loading","loadcontainer","Landing","require","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeMonths","months","setState","m","console","log","state","handleChange","value","s","inputValue","disabled","fetch","then","res","json","data","evt","target","length","_this2","_this$state","react_default","a","createElement","className","classes","header","subheader","type","onChange","updateInputValue","placeholder","lib_default","min","max","step","react_router_dom","style","textDecoration","to","concat","Component","Results","isDone","search","getstuff","_ref","asyncToGenerator","regenerator_default","mark","_callee","getGames","getRecent","list","fullList","wrap","_context","prev","next","steamID","response","gamepool","hasOwnProperty","games","forEach","game","playtime_forever","push","appid","Promise","all","values","i","filter","item","index","inputArray","indexOf","sent","abrupt","stop","apply","arguments","gamelist","results","getNames","applist","apps","name","getNews","map","gameID","appnews","newsitems","article","val","sort","b","date","feedname","author","newList","ts","Math","round","Date","getTime","toString","substring","event","_this3","filtergames","toLowerCase","updateSearch","settings","color","href","key","onClick","window","open","url","autor","feed","feedlabel","src","alt","Page","location","pathname","endsWith","includes","pathArray","split","src_Results_Results","Default","App","react_router","path","exact","component","Boolean","hostname","match","ReactDOM","render","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","conatiner"],"mappings":"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","file":"static/js/main.dff2546a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__1D7sd\",\"title\":\"Page_title__1nPMM\",\"link\":\"Page_link__1XPas\",\"button\":\"Page_button__ZuEiA\",\"hour\":\"Page_hour__i_Tga\",\"amount\":\"Page_amount__1hFIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Default_container__bnkX6\",\"text\":\"Default_text__xSAez\",\"button\":\"Default_button__25b99\",\"disable\":\"Default_disable__1kL8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Results_main__1JASj\",\"articles\":\"Results_articles__p4JyB\",\"title\":\"Results_title__2Ttx4\",\"link\":\"Results_link__UH-gB\",\"private\":\"Results_private__2COTd\",\"input\":\"Results_input__3hTBa\",\"main2\":\"Results_main2__2JSmz\",\"left\":\"Results_left__2rPsA\",\"ldsdefault\":\"Results_ldsdefault__38MwW\",\"loading\":\"Results_loading__cEwap\",\"loadcontainer\":\"Results_loadcontainer__eJ6_M\"};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Landing.module.css\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\nvar classNames = require(\"classnames\");\r\n\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: \"\",\r\n      value: 10,\r\n      months: 6,\r\n      disabled: true,\r\n      s: \"s\",\r\n      m: \"s\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n\r\n    fetch(`https://ancient-dusk-43980.herokuapp.com/440/news`) //I make this call to the server to wake up heroku's free server.\r\n      .then(res => res.json()) //This call does nothing, the freeplan puts the server to sleep after 30 minutes\r\n      .then(data => {\r\n        //This call will wake the server up so by the time the user gets to the next page, it's alread loaded.\r\n        console.log(data);\r\n      });\r\n  }\r\n  handleChangeMonths = months => {\r\n    this.setState({\r\n      months: months\r\n    })\r\n     \r\n    if (months == 1) {\r\n      //toggles between \"hours\" and hour\"\r\n      this.setState({\r\n        m: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        m: \"s\"\r\n      });\r\n    }\r\n    console.log(this.state.months)\r\n  }\r\n  handleChange = value => {\r\n    this.setState({\r\n      //set the state as value\r\n      value: value\r\n    });\r\n    \r\n    if (value == 1) {\r\n      //toggles between \"hours\" and hour\"\r\n      this.setState({\r\n        s: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        s: \"s\"\r\n      });\r\n    }\r\n  };\r\n\r\n  updateInputValue(evt) {\r\n    if (evt.target.value.length === 17) {\r\n      this.setState({\r\n        disabled: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        disabled: true\r\n      });\r\n\r\n    }\r\n    this.setState({\r\n      inputValue: evt.target.value\r\n    });\r\n  }\r\n  render() {\r\n    const { value, months } = this.state;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.title}>\r\n          <div className={classes.header}>Steam News Generator</div>\r\n          <div className={classes.subheader}>\r\n            Recent news within <span className={classes.amount}>{months}</span> month{this.state.m} for your most recent and favorite games!\r\n          </div>\r\n        </div>\r\n        <div className={classes.main}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"search\"\r\n            value={this.state.inputValue}\r\n            onChange={evt => this.updateInputValue(evt)}\r\n            placeholder=\"Enter 17 digit steam ID\"\r\n          />\r\n\r\n          <div className=\"slider\">\r\n            <Slider\r\n              min={1}\r\n              max={100}\r\n              value={value}\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"slider\">\r\n              <Slider\r\n                min={1}\r\n                max={12}\r\n                step={1}\r\n                value={months}\r\n                onChange={this.handleChangeMonths}\r\n              />\r\n              <div className=\"value\">{value}</div>\r\n              <Link\r\n              style={{ textDecoration: \"none\" }}\r\n              className={classes.link}\r\n              to={`/${this.state.inputValue}/${this.state.value}/${this.state.months}`}\r\n            >\r\n              <button disabled={this.state.disabled} className={classes.button}>\r\n                Search games above <span className={classes.hour}>{value}</span> hour{this.state.s}\r\n              </button>{\" \"}\r\n            </Link>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./Results.module.css\";\r\nclass Results extends Component {\r\n  //for testing steamIDs\r\n  //not played in 2 weeks 76561198018232960\r\n  //has played 2 games in 2 weeks 76561198093118389\r\n  // 76561198046981667\r\n  // 76561198018404923\r\n  // 76561197968576433\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articles: [],\r\n      isDone: false,\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getstuff = async () => {\r\n      const getGames = () => {\r\n        return fetch(\r\n          `https://ancient-dusk-43980.herokuapp.com/${this.props.steamID}`\r\n        ) //fetch the games they have played with more than 50 hours\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let gamepool = []; //create an array\r\n            data = data.response;\r\n            if (data.hasOwnProperty(\"games\")) {\r\n              let list = data.games; //create a list of the games\r\n              list.forEach(game => {\r\n                if (game.playtime_forever > this.props.value * 60) {\r\n                  gamepool.push(game.appid); //only push to gamepool array if there's more than x hours\r\n                }\r\n              });\r\n            }\r\n            return gamepool; //let getGames return our gamepool list\r\n          });\r\n      };\r\n      const getRecent = () => {\r\n        return fetch(\r\n          `https://ancient-dusk-43980.herokuapp.com/${\r\n            this.props.steamID\r\n          }/recent`\r\n        ) //fetch the games they have played within the past 2 weeks\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let gamepool = []; //create another gamepool list\r\n            data = data.response;\r\n            if (data.hasOwnProperty(\"games\")) {\r\n              let list = data.games;\r\n\r\n              list.forEach(game => {\r\n                gamepool.push(game.appid); //adding these games to our gamepool\r\n              });\r\n            }\r\n            return gamepool; //return the list of all recent games\r\n          });\r\n      };\r\n\r\n      let list = []; //create a new array that will have our total games\r\n\r\n      const fullList = await Promise.all([getGames(), getRecent()]) //get both the list of games with over 50 hours and recently played games\r\n        .then(values => {\r\n          for (let i = 0; i < 2; i++) {\r\n            //merge both arrays together.\r\n            values[i].forEach(game => {\r\n              list.push(game);\r\n            });\r\n          }\r\n          list = list.filter((item, index, inputArray) => {\r\n            //get rid of any duplicates\r\n            return inputArray.indexOf(item) === index;\r\n          });\r\n          return list;\r\n        });\r\n\r\n      return fullList; //getStuff will return this list of games to search\r\n    };\r\n\r\n    let list = [];\r\n    let gamelist = [];\r\n    getstuff().then(results => {\r\n      // get the list of games\r\n      const getNames = fetch(\r\n        `https://ancient-dusk-43980.herokuapp.com/${\r\n          this.props.steamID\r\n        }/gamelist`\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          data.applist.apps.forEach(item => {\r\n            let game = {\r\n              appid: item.appid,\r\n              name: item.name\r\n            };\r\n            gamelist.push(game);\r\n          });\r\n          return gamelist;\r\n        });\r\n      const getNews = results.map((\r\n        gameID //make a promise that i will return an array full of articles\r\n      ) =>\r\n        fetch(`https://ancient-dusk-43980.herokuapp.com/${gameID}/news`)\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            data.appnews.newsitems.forEach(article => {\r\n              //each article, I want to push it to the list\r\n              list.push(article);\r\n            });\r\n            return data;\r\n          })\r\n      );\r\n\r\n      getNames.then(val => {\r\n        console.log(gamelist);\r\n        console.log(list);\r\n\r\n        Promise.all(getNews).then(values => {\r\n          // once our array of promises is fulfille\r\n          list.sort((a, b) => {\r\n            //get the list and sort them by date\r\n            return b.date - a.date;\r\n          });\r\n          gamelist.map(game => {\r\n            list.map(article => {\r\n              if (article.appid == game.appid) {\r\n                article.feedname = game.name;\r\n              }\r\n            });\r\n          });\r\n          list.forEach(article => {\r\n            if (article.author == \"\") {\r\n              article.author = \"In article\";\r\n            }\r\n          });\r\n          let newList = [];\r\n          list.forEach(article => {\r\n            let ts = Math.round(new Date().getTime() / 1000);\r\n            ts = ts - this.props.months * 2582000;\r\n            if (article.date > ts) {\r\n              newList.push(article);\r\n            }\r\n          });\r\n          newList.forEach(article => {\r\n            //get the articles and convert it unix to date format\r\n            article.date = new Date(article.date * 1000)\r\n              .toString() //turn it into a string\r\n              .substring(0, 15); //truncate off the time and seconds, only return day and date\r\n          });\r\n          this.setState({\r\n            //set the state.articles to the list, a change in state should trigger a rerender\r\n            articles: newList,\r\n            isDone: true\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  updateSearch(event) {\r\n    this.setState({\r\n      search: event.target.value\r\n    });\r\n  }\r\n  render() {\r\n    let filtergames = this.state.articles.filter(game => {\r\n      return (\r\n        game.feedname.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\r\n        -1\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          className={classes.input}\r\n          placeholder=\"Filter games\"\r\n          value={this.state.search}\r\n          onChange={evt => this.updateSearch(evt)}\r\n        />\r\n        <div className={classes.main}>\r\n\r\n          {(this.state.articles.length === 0 && this.state.isDone === false) ?\r\n          ( <div className={classes.loadcontainer}><div className={classes.ldsdefault}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div><div className={classes.loading}>Loading your articles...</div></div>\r\n            ) : (this.state.articles.length === 0 && this.state.isDone === false) ? ( //This is used to make sure that we got data back, if we didn't it means their profile is private and they need to fix that.\r\n            <div className={classes.private}>\r\n              Unable to retrieve data from server. Check{\" \"}\r\n              <span>\r\n                <a\r\n                  className={classes.settings}\r\n                  style={{ textDecoration: \"none\", color: \"grey\" }}\r\n                  href=\"https://steamcommunity.com/my/edit/settings\"\r\n                >\r\n                  here\r\n                </a>\r\n              </span>{\" \"}\r\n              to make sure your profile is public or try a different steam ID\r\n            </div>\r\n          ) : (\r\n            filtergames.map((item, index) => {\r\n              //loop through each article, this doesn't return null because we initialized this.state.articles as\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => window.open(`${item.url}`, \"_blank\")}\r\n                  className={classes.articles}\r\n                >\r\n                  <div className={classes.title}>{item.title}</div>\r\n                  <div classes={classes.main2}>\r\n                    <div className={classes.left}>\r\n                      <div className={classes.appid}>Game: {item.feedname}</div>\r\n                      <div className={classes.autor}>Author: {item.author}</div>\r\n                      <div className={classes.feed}>Feed: {item.feedlabel}</div>\r\n                      <div className={classes.date}>Date: {item.date}</div>\r\n                      <div className={classes.link}>Click for full article</div>\r\n                    </div>\r\n                   \r\n                      <img\r\n                      \r\n                      src={`https://steamcdn-a.akamaihd.net/steam/apps/${\r\n                        item.appid\r\n                      }/header.jpg`}\r\n                      alt={`Image of ${item.feedname} couldn't load`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\nimport Results from \"../Results/Results\";\r\nimport classes from \"./Page.module.css\";\r\nimport {Link} from 'react-router-dom';\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      s: \"s\",\r\n      m: \"s\"\r\n    };\r\n  }\r\n  //#3a9ed8\r\ncomponentDidMount(){\r\n \r\n  if(this.props.location.pathname.endsWith(\"/1\")){ //check to see if they put more than 1 hour, if they did, \"hours\" is plural, if they didn't \"hour\" is singular without \"s\"\r\n    this.setState({\r\n      m: \"\"\r\n    })\r\n  } \r\n  if(this.props.location.pathname.includes(\"/1/\")){\r\n    this.setState({\r\n      s: \"\"\r\n    })\r\n  }\r\n}\r\n  render() {\r\n    let pathArray = this.props.location.pathname.split('/') //we need to split the array to pass in steamID and hours as props\r\n    return (\r\n  \r\n        <div className={classes.container}>\r\n          <div className={classes.title}>\r\n            Here's news within the past <span className={classes.amount}>{pathArray[3]}</span> month{this.state.m} for games you've played recently, as well as\r\n            games you've played for more than <span className={classes.hour}>{pathArray[2]}</span> hour{this.state.s}. If the list is smaller than you think, check\r\n            your steam privacy settings!\r\n          </div>\r\n           <Link style={{'textDecoration': 'none'}}  className={classes.link} to={`/`}><div className={classes.button}>New Search</div> </Link>\r\n          <Results steamID={pathArray[1]} value={pathArray[2]} months={pathArray[3]} />\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\nimport classes from './Default.module.css';\r\nimport { Link } from \"react-router-dom\";\r\nclass Default extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.container}>\r\n                 <h1>error</h1>\r\n                <h2>page not found</h2>\r\n                <h3>the requested URL <span className={classes.text}>{this.props.location.pathname}</span> was not found</h3>\r\n                <Link style={{'textDecoration': 'none'}}  className={classes.link} to={`/`}><div className={classes.button}>Click here to go back</div> </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Default;","import React from 'react';\nimport {Switch, Route} from  'react-router-dom';\nimport './App.css';\nimport Landing from './Landing/Landing.js'\nimport Page from './Page/Page.js'\nimport Default from './Default/Default'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n      <Route path= {\"/\"} exact component={Landing}/>\n      <Route path= {\"/:id/:value/:months\"} exact component={Page}/>\n      <Route component={Default}/>\n      </Switch>\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from  'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Landing_container__3cFkZ\",\"main\":\"Landing_main__TO3Of\",\"input\":\"Landing_input__FKYRR\",\"button\":\"Landing_button__3Jkyp\",\"title\":\"Landing_title__3Fy2R\",\"header\":\"Landing_header__3OomK\",\"subheader\":\"Landing_subheader__2vVjk\",\"hour\":\"Landing_hour__1xuB_\",\"amount\":\"Landing_amount__1JcXb\",\"conatiner\":\"Landing_conatiner__2kdFI\"};"],"sourceRoot":""}