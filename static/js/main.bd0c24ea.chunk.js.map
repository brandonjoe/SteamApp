{"version":3,"sources":["Page/Page.module.css","Default/Default.module.css","Results/Results.module.css","Landing/Landing.js","Results/Results.js","Page/Page.js","Default/Default.js","App.js","serviceWorker.js","index.js","Landing/Landing.module.css"],"names":["module","exports","container","title","link","button","text","disable","main","articles","private","Landing","require","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","value","setState","s","state","inputValue","disabled","fetch","then","res","json","data","console","log","evt","target","length","_this2","react_default","a","createElement","className","classes","header","subheader","input","type","onChange","updateInputValue","placeholder","lib_default","min","max","react_router_dom","style","textDecoration","to","concat","Component","Results","isDone","getstuff","_ref","asyncToGenerator","regenerator_default","mark","_callee","getGames","getRecent","list","fullList","wrap","_context","prev","next","steamID","response","gamepool","hasOwnProperty","games","forEach","game","playtime_forever","push","appid","Promise","all","values","i","filter","item","index","inputArray","indexOf","sent","abrupt","stop","apply","arguments","results","getNews","map","gameID","appnews","newsitems","article","sort","b","date","newList","ts","Math","round","Date","getTime","toString","substring","settings","color","href","key","autor","author","feed","feedlabel","url","Page","location","pathname","endsWith","pathArray","split","src_Results_Results","Default","App","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","conatiner"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,UAAA,wBAAAC,MAAA,oBAAAC,KAAA,mBAAAC,OAAA,0CCAlBL,EAAAC,QAAA,CAAkBC,UAAA,2BAAAI,KAAA,sBAAAD,OAAA,wBAAAE,QAAA,2HCAlBP,EAAAC,QAAA,CAAkBO,KAAA,sBAAAC,SAAA,0BAAAN,MAAA,uBAAAC,KAAA,sBAAAM,QAAA,6MCwGHC,SApGEC,EAAQ,gBAKvB,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAiBRQ,aAAe,SAAAC,GACbR,EAAKS,SAAS,CAEZD,MAAOA,IAEI,GAATA,EAEFR,EAAKS,SAAS,CACZC,EAAG,KAGLV,EAAKS,SAAS,CACZC,EAAG,OA5BPV,EAAKW,MAAQ,CACXC,WAAY,GACZJ,MAAO,GACPK,UAAU,EACVH,EAAG,KANYV,mFAUjBc,MAAK,qDACFC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAEJC,QAAQC,IAAIF,8CAqBDG,GACiB,KAA5BA,EAAIC,OAAOd,MAAMe,QACnBpB,KAAKM,SAAS,CACZI,UAAU,IAEZM,QAAQC,IAAIC,EAAIC,OAAOd,MAAMe,QAC7BJ,QAAQC,IAAIjB,KAAKQ,MAAME,YAEvBV,KAAKM,SAAS,CACZI,UAAU,IAEZM,QAAQC,IAAIC,EAAIC,OAAOd,MAAMe,QAC7BJ,QAAQC,IAAIjB,KAAKQ,MAAME,WAEzBV,KAAKM,SAAS,CACZG,WAAYS,EAAIC,OAAOd,yCAGlB,IAAAgB,EAAArB,KACCK,EAAUL,KAAKQ,MAAfH,MACR,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQzC,WACtBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxC,OACtBoC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQC,QAAxB,wBACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQE,WAAxB,yDAIFN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQnC,MACtB+B,EAAAC,EAAAC,cAAA,SACEC,UAAWC,IAAQG,MACnBC,KAAK,SACLzB,MAAOL,KAAKQ,MAAMC,WAClBsB,SAAU,SAAAb,GAAG,OAAIG,EAAKW,iBAAiBd,IACvCe,YAAY,4BAGdX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,IAAK,EACLC,IAAK,IACL/B,MAAOA,EACP0B,SAAU/B,KAAKI,eAEjBkB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAO,CAAEC,eAAgB,QACzBd,UAAWC,IAAQvC,KACnBqD,GAAE,IAAAC,OAAMzC,KAAKQ,MAAMC,WAAjB,KAAAgC,OAA+BzC,KAAKQ,MAAMH,QAE5CiB,EAAAC,EAAAC,cAAA,UAAQd,SAAUV,KAAKQ,MAAME,SAAUe,UAAWC,IAAQtC,QAA1D,sBACsBiB,EADtB,QACkCL,KAAKQ,MAAMD,GACnC,eAvFFmC,uDC8JPC,cA7Jb,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KACDY,MAAQ,CACXhB,SAAU,GACVoD,QAAQ,GAJO/C,mFAQC,IAAAwB,EAAArB,KACZ6C,EAAQ,eAAAC,EAAAhD,OAAAiD,EAAA,EAAAjD,CAAAkD,EAAAzB,EAAA0B,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAzB,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTP,EAAW,WACf,OAAOxC,MAAK,4CAAA8B,OACkCpB,EAAKzB,MAAM+D,UAEtD/C,KAAK,SAAAgD,GAAQ,OAAIA,EAAS9C,SAC1BF,KAAK,SAAAG,GACJ,IAAI8C,EAAW,IACf9C,EAAOA,EAAK6C,UACHE,eAAe,UACX/C,EAAKgD,MACXC,QAAQ,SAAAC,GACPA,EAAKC,iBAAsC,GAAnB7C,EAAKzB,MAAMS,OACrCwD,EAASM,KAAKF,EAAKG,SAIzB,OAAOP,KAGPT,EAAY,WAChB,OAAOzC,MAAK,4CAAA8B,OAERpB,EAAKzB,MAAM+D,QAFH,YAKT/C,KAAK,SAAAgD,GAAQ,OAAIA,EAAS9C,SAC1BF,KAAK,SAAAG,GACJ,IAAI8C,EAAW,IACf9C,EAAOA,EAAK6C,UACHE,eAAe,UACX/C,EAAKgD,MAEXC,QAAQ,SAAAC,GACXJ,EAASM,KAAKF,EAAKG,SAGvB,OAAOP,KAGTR,EAAO,GAxCIG,EAAAE,KAAA,EA0CQW,QAAQC,IAAI,CAACnB,IAAYC,MAC7CxC,KAAK,SAAA2D,GACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAErBD,EAAOC,GAAGR,QAAQ,SAAAC,GAChBZ,EAAKc,KAAKF,KAOd,OAJAZ,EAAOA,EAAKoB,OAAO,SAACC,EAAMC,EAAOC,GAE/B,OAAOA,EAAWC,QAAQH,KAAUC,MApD3B,cA0CTrB,EA1CSE,EAAAsB,KAAAtB,EAAAuB,OAAA,SAyDRzB,GAzDQ,wBAAAE,EAAAwB,SAAA9B,MAAH,yBAAAJ,EAAAmC,MAAAjF,KAAAkF,YAAA,GA4DV7B,EAAO,GAEXR,IAAWjC,KAAK,SAAAuE,GAEd,IAAMC,EAAUD,EAAQE,IAAI,SAC1BC,GAD0B,OAG1B3E,MAAK,4CAAA8B,OAA6C6C,EAA7C,UACF1E,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAKJ,OAJAA,EAAKwE,QAAQC,UAAUxB,QAAQ,SAAAyB,GAE7BpC,EAAKc,KAAKsB,KAEL1E,MAGbsD,QAAQC,IAAIc,GAASxE,KAAK,SAAA2D,GAExBlB,EAAKqC,KAAK,SAACnE,EAAGoE,GAEZ,OAAOA,EAAEC,KAAOrE,EAAEqE,OAEpB,IAAIC,EAAU,GACdxC,EAAKW,QAAQ,SAAAyB,GACX,IAAIK,EAAKC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAC3CJ,GAAU,OACNL,EAAQG,KAAOE,GACjBD,EAAQ1B,KAAKsB,KAGjBI,EAAQ7B,QAAQ,SAAAyB,GAEdA,EAAQG,KAAO,IAAIK,KAAoB,IAAfR,EAAQG,MAC7BO,WACAC,UAAU,EAAG,MAElB/E,EAAKf,SAAS,CAEZd,SAAUqG,EACVjD,QAAQ,yCAMd,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQnC,MACU,IAA/BS,KAAKQ,MAAMhB,SAAS4B,SAAsC,IAAtBpB,KAAKQ,MAAMoC,OAC9CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQjC,SAAxB,6CAC6C,IAC3C6B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KACEC,UAAWC,IAAQ2E,SACnB/D,MAAO,CAAEC,eAAgB,OAAQ+D,MAAO,QACxCC,KAAK,+CAHP,SAOM,IAVV,mEAcAvG,KAAKQ,MAAMhB,SAAS6F,IAAI,SAACX,EAAMC,GAE7B,OACErD,EAAAC,EAAAC,cAAA,OAAKgF,IAAK7B,EAAOlD,UAAWC,IAAQlC,UAClC8B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxC,OAAQwF,EAAKxF,OACrCoC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ+E,OAAxB,WAAwC/B,EAAKgC,QAC7CpF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQiF,MAAxB,SAAqCjC,EAAKkC,WAC1CtF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQkE,MAAxB,SAAqClB,EAAKkB,MAC1CtE,EAAAC,EAAAC,cAAA,KACEc,MAAO,CAAEC,eAAgB,QACzBgE,KAAI,GAAA9D,OAAKiC,EAAKmC,KACd1F,OAAO,SACPM,UAAWC,IAAQvC,MAJrB,mCAnJMuD,8BCiCPoE,cA/Bb,SAAAA,EAAYlH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACjBjH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgH,GAAA3G,KAAAH,KAAMJ,KACDY,MAAQ,CACXD,EAAG,KAHYV,mFAOhBG,KAAKJ,MAAMmH,SAASC,SAASC,SAAS,OACvCjH,KAAKM,SAAS,CACZC,EAAG,sCAKL,IAAI2G,EAAYlH,KAAKJ,MAAMmH,SAASC,SAASG,MAAM,KACnD,OAEI7F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQzC,WACtBqC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxC,OAAxB,uHAEqCgI,EAAU,GAF/C,QAEwDlH,KAAKQ,MAAMD,EAFnE,+EAKCe,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAkB,QAAUd,UAAWC,IAAQvC,KAAMqD,GAAE,KAAOlB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQtC,QAAxB,cAA5E,KACDkC,EAAAC,EAAAC,cAAC4F,EAAD,CAASzD,QAASuD,EAAU,GAAI7G,MAAO6G,EAAU,aAzBxCxE,8BCYJ2E,mLAXP,OACI/F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQzC,WACnBqC,EAAAC,EAAAC,cAAA,mBACDF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQrC,MAAOW,KAAKJ,MAAMmH,SAASC,UAA1E,kBACA1F,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,MAAO,CAACC,eAAkB,QAAUd,UAAWC,IAAQvC,KAAMqD,GAAE,KAAOlB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQtC,QAAxB,yBAA5E,aAPMsD,aCgBP4E,MAbf,WACE,OACEhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,KACAjG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOC,KAAO,IAAKC,OAAK,EAACC,UAAWhI,IACpC4B,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOC,KAAO,cAAeC,OAAK,EAACC,UAAWZ,IAC9CxF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAOG,UAAWL,OCAJM,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DCXNC,IAASC,OAAS1G,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQ4F,SAAUC,aAChC5G,EAAAC,EAAAC,cAAC2G,EAAD,OACOC,SAASC,eAAe,SDwH7B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5H,KAAK,SAAA6H,GACjCA,EAAaC,kCElInB3J,EAAAC,QAAA,CAAkBC,UAAA,2BAAAM,KAAA,sBAAAsC,MAAA,uBAAAzC,OAAA,wBAAAF,MAAA,uBAAAyC,OAAA,wBAAAC,UAAA,2BAAA+G,UAAA","file":"static/js/main.bd0c24ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__1D7sd\",\"title\":\"Page_title__1nPMM\",\"link\":\"Page_link__1XPas\",\"button\":\"Page_button__ZuEiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Default_container__bnkX6\",\"text\":\"Default_text__xSAez\",\"button\":\"Default_button__25b99\",\"disable\":\"Default_disable__1kL8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Results_main__1JASj\",\"articles\":\"Results_articles__p4JyB\",\"title\":\"Results_title__2Ttx4\",\"link\":\"Results_link__UH-gB\",\"private\":\"Results_private__2COTd\"};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Landing.module.css\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\nvar classNames = require(\"classnames\");\r\n//not played in 2 weeks 76561198018232960 3dayrespawn\r\n//has played 2 games in 2 weeks kast master\r\n//plays lots of games\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: \"\",\r\n      value: 10,\r\n      disabled: true,\r\n      s: \"s\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(`https://ancient-dusk-43980.herokuapp.com/440/news`) //I make this call to the server to wake up heroku's free server.\r\n      .then(res => res.json()) //This call does nothing, the freeplan puts the server to sleep after 30 minutes\r\n      .then(data => {\r\n        //This call will wake the server up so by the time the user gets to the next page, it's alread loaded.\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.setState({\r\n      //set the state as value\r\n      value: value\r\n    });\r\n    if (value == 1) {\r\n      //toggles between \"hours\" and hour\"\r\n      this.setState({\r\n        s: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        s: \"s\"\r\n      });\r\n    }\r\n  };\r\n\r\n  updateInputValue(evt) {\r\n    if (evt.target.value.length === 17) {\r\n      this.setState({\r\n        disabled: false\r\n      });\r\n      console.log(evt.target.value.length);\r\n      console.log(this.state.disabled);\r\n    } else {\r\n      this.setState({\r\n        disabled: true\r\n      });\r\n      console.log(evt.target.value.length);\r\n      console.log(this.state.disabled);\r\n    }\r\n    this.setState({\r\n      inputValue: evt.target.value\r\n    });\r\n  }\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.title}>\r\n          <div className={classes.header}>Steam News Generator</div>\r\n          <div className={classes.subheader}>\r\n            Recent news for your most recent and favorite games!\r\n          </div>\r\n        </div>\r\n        <div className={classes.main}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"search\"\r\n            value={this.state.inputValue}\r\n            onChange={evt => this.updateInputValue(evt)}\r\n            placeholder=\"Enter 17 digit steam ID\"\r\n          />\r\n\r\n          <div className=\"slider\">\r\n            <Slider\r\n              min={1}\r\n              max={100}\r\n              value={value}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Link\r\n              style={{ textDecoration: \"none\" }}\r\n              className={classes.link}\r\n              to={`/${this.state.inputValue}/${this.state.value}`}\r\n            >\r\n              <button disabled={this.state.disabled} className={classes.button}>\r\n                Search games above {value} hour{this.state.s}\r\n              </button>{\" \"}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./Results.module.css\";\r\nclass Results extends Component {\r\n  //not played in 2 weeks 76561198018232960 3dayrespawn\r\n  //has played 2 games in 2 weeks kast master 76561198093118389\r\n  //plays lots of games 76561198046981667\r\n  //magic 76561198018404923\r\n  //jorm 76561197968576433\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articles: [],\r\n      isDone: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getstuff = async () => {\r\n      const getGames = () => {\r\n        return fetch(\r\n          `https://ancient-dusk-43980.herokuapp.com/${this.props.steamID}`\r\n        ) //fetch the games they have played with more than 50 hours\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let gamepool = []; //create an array\r\n            data = data.response;\r\n            if (data.hasOwnProperty(\"games\")) {\r\n              let list = data.games; //create a list of the games\r\n              list.forEach(game => {\r\n                if (game.playtime_forever > this.props.value * 60) {\r\n                  gamepool.push(game.appid); //only push to gamepool array if there's more than x hours\r\n                }\r\n              });\r\n            }\r\n            return gamepool; //let getGames return our gamepool list\r\n          });\r\n      };\r\n      const getRecent = () => {\r\n        return fetch(\r\n          `https://ancient-dusk-43980.herokuapp.com/${\r\n            this.props.steamID\r\n          }/recent`\r\n        ) //fetch the games they have played within the past 2 weeks\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            let gamepool = []; //create another gamepool list\r\n            data = data.response;\r\n            if (data.hasOwnProperty(\"games\")) {\r\n              let list = data.games;\r\n\r\n              list.forEach(game => {\r\n                gamepool.push(game.appid); //adding these games to our gamepool\r\n              });\r\n            }\r\n            return gamepool; //return the list of all recent games\r\n          });\r\n      };\r\n      let list = []; //create a new array that will have our total games\r\n\r\n      const fullList = await Promise.all([getGames(), getRecent()]) //get both the list of games with over 50 hours and recently played games\r\n        .then(values => {\r\n          for (let i = 0; i < 2; i++) {\r\n            //merge both arrays together.\r\n            values[i].forEach(game => {\r\n              list.push(game);\r\n            });\r\n          }\r\n          list = list.filter((item, index, inputArray) => {\r\n            //get rid of any duplicates\r\n            return inputArray.indexOf(item) === index;\r\n          });\r\n          return list;\r\n        });\r\n\r\n      return fullList; //getStuff will return this list of games to search\r\n    };\r\n\r\n    let list = [];\r\n\r\n    getstuff().then(results => {\r\n      // get the list of games\r\n      const getNews = results.map((\r\n        gameID //make a promise that i will return an array full of articles\r\n      ) =>\r\n        fetch(`https://ancient-dusk-43980.herokuapp.com/${gameID}/news`)\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            data.appnews.newsitems.forEach(article => {\r\n              //each article, I want to push it to the list\r\n              list.push(article);\r\n            });\r\n            return data;\r\n          })\r\n      );\r\n      Promise.all(getNews).then(values => {\r\n        // once our array of promises is fulfilled\r\n        list.sort((a, b) => {\r\n          //get the list and sort them by date\r\n          return b.date - a.date;\r\n        });\r\n        let newList = [];\r\n        list.forEach(article => {\r\n          let ts = Math.round(new Date().getTime() / 1000);\r\n          ts = ts - 15770000;\r\n          if (article.date > ts) {\r\n            newList.push(article);\r\n          }\r\n        });\r\n        newList.forEach(article => {\r\n          //get the articles and convert it unix to date format\r\n          article.date = new Date(article.date * 1000)\r\n            .toString() //turn it into a string\r\n            .substring(0, 15); //truncate off the time and seconds, only return day and date\r\n        });\r\n        this.setState({\r\n          //set the state.articles to the list, a change in state should trigger a rerender\r\n          articles: newList,\r\n          isDone: true\r\n        });\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.main}>\r\n        {this.state.articles.length === 0 && this.state.isDone === true ? ( //This is used to make sure that we got data back, if we didn't it means their profile is private and they need to fix that.\r\n          <div className={classes.private}>\r\n            Unable to retrieve data from server. Check{\" \"}\r\n            <span>\r\n              <a\r\n                className={classes.settings}\r\n                style={{ textDecoration: \"none\", color: \"grey\" }}\r\n                href=\"https://steamcommunity.com/my/edit/settings\"\r\n              >\r\n                here\r\n              </a>\r\n            </span>{\" \"}\r\n            to make sure your profile is public or try a different steam ID\r\n          </div>\r\n        ) : (\r\n          this.state.articles.map((item, index) => {\r\n            //loop through each article, this doesn't return null because we initialized this.state.articles as\r\n            return (\r\n              <div key={index} className={classes.articles}>\r\n                <div className={classes.title}>{item.title}</div>\r\n                <div className={classes.autor}>Author: {item.author}</div>\r\n                <div className={classes.feed}>Feed: {item.feedlabel}</div>\r\n                <div className={classes.date}>Date: {item.date}</div>\r\n                <a\r\n                  style={{ textDecoration: \"none\" }}\r\n                  href={`${item.url}`}\r\n                  target=\"_blank\"\r\n                  className={classes.link}\r\n                >\r\n                  Link to full article\r\n                </a>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\nimport Results from \"../Results/Results\";\r\nimport classes from \"./Page.module.css\";\r\nimport {Link} from 'react-router-dom';\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      s: \"s\"\r\n    };\r\n  }\r\ncomponentDidMount(){\r\n  if(this.props.location.pathname.endsWith(\"/1\")){ //check to see if they put more than 1 hour, if they did, \"hours\" is plural, if they didn't \"hour\" is singular without \"s\"\r\n    this.setState({\r\n      s: \"\"\r\n    })\r\n  } \r\n}\r\n  render() {\r\n    let pathArray = this.props.location.pathname.split('/') //we need to split the array to pass in steamID and hours as props\r\n    return (\r\n  \r\n        <div className={classes.container}>\r\n          <div className={classes.title}>\r\n            Here's news within the past 6 months for games you've played recently, as well as\r\n            games you've played for more than {pathArray[2]} hour{this.state.s}. If the list is smaller than you think, check\r\n            your steam privacy settings!\r\n          </div>\r\n           <Link style={{'textDecoration': 'none'}}  className={classes.link} to={`/`}><div className={classes.button}>New Search</div> </Link>\r\n          <Results steamID={pathArray[1]} value={pathArray[2]} />\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\nimport classes from './Default.module.css';\r\nimport { Link } from \"react-router-dom\";\r\nclass Default extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.container}>\r\n                 <h1>error</h1>\r\n                <h2>page not found</h2>\r\n                <h3>the requested URL <span className={classes.text}>{this.props.location.pathname}</span> was not found</h3>\r\n                <Link style={{'textDecoration': 'none'}}  className={classes.link} to={`/`}><div className={classes.button}>Click here to go back</div> </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Default;","import React from 'react';\nimport {Switch, Route} from  'react-router-dom';\nimport './App.css';\nimport Landing from './Landing/Landing.js'\nimport Page from './Page/Page.js'\nimport Default from './Default/Default'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n      <Route path= {\"/\"} exact component={Landing}/>\n      <Route path= {\"/:id/:value\"} exact component={Page}/>\n      <Route component={Default}/>\n      </Switch>\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from  'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Landing_container__3cFkZ\",\"main\":\"Landing_main__TO3Of\",\"input\":\"Landing_input__FKYRR\",\"button\":\"Landing_button__3Jkyp\",\"title\":\"Landing_title__3Fy2R\",\"header\":\"Landing_header__3OomK\",\"subheader\":\"Landing_subheader__2vVjk\",\"conatiner\":\"Landing_conatiner__2kdFI\"};"],"sourceRoot":""}